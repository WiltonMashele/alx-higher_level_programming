================================
How to Use 4-print_square.py
================================

This module provides a function called "print_square(size)" that is used to print square patterns.

Usage
=====

The square patterns are printed using the "#" character. The parameter "size" represents both the height and width of the square.

Example usage:

>>> from __import__('4-print_square').print_square
>>> print_square(1)
#

>>> print_square(4)
####
####
####
####

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

If the value of "size" is set to zero, the function will not print anything.

Handling Invalid Sizes
======================

The "size" parameter must be an integer. If it is not, a TypeError will be raised.

Example:

>>> print_square("not an int")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "4-print_square.py", line 8, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

>>> print_square(5.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "4-print_square.py", line 8, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

>>> print_square(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "4-print_square.py", line 8, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

If the value of "size" is negative, a ValueError will be raised.

Example:

>>> print_square(-7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "4-print_square.py", line 10, in print_square
    raise ValueError("size must be >= 0")
ValueError: size must be >= 0

Note that the type check is performed before the value check.

Example:

>>> print_square(-7.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "4-print_square.py", line 8, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

It is important to provide at least one argument when calling the function.

Example:

>>> print_square()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: print_square() missing 1 required positional argument: 'size'
